#include<iostream>
#define max 100
using namespace std;

class CircularQueue {
	int front, rear;
	int a[max];

public:
	CircularQueue() {
		front = -1;
		rear = -1;
	}

	void Enqueue(int x) {
		if ((front == 0 && rear == max - 1) || (front == rear + 1)) {
			cout << "Overflow!\n";
			return;
		}
		if (front == -1) { // First element
			front = rear = 0;
		}
		else if (rear == max - 1) {
			rear = 0;
		}
		else {
			rear++;
		}
		a[rear] = x;
	}

	void Dequeue() {
		if (front == -1) {
			cout << "Underflow!\n";
			return;
		}
		cout << "Dequeued element is: " << a[front] << endl;
		if (front == rear) { // Only one element
			front = rear = -1;
		}
		else if (front == max - 1) {
			front = 0;
		}
		else {
			front++;
		}
	}

	void peek() {
		if (front == -1) {
			cout << "Underflow!\n";
		}
		else {
			cout << "Peeked element is: " << a[front] << endl;
		}
	}

	void display() {
		if (front == -1) {
			cout << "Underflow!\n";
			return;
		}

		cout << "Queue elements: ";
		if (front <= rear) {
			for (int i = front; i <= rear; i++)
				cout << a[i] << " ";
		}
		else {
			for (int i = front; i < max; i++)
				cout << a[i] << " ";
			for (int i = 0; i <= rear; i++)
				cout << a[i] << " ";
		}
		cout << endl;
	}
};

int main() {
	CircularQueue cq;
	int choice, value;

	do {
		cout << "\nChoose the option:\n";
		cout << "1. Enqueue\n2. Dequeue\n3. Peek\n4. Display\n5. Exit\n";
		cin >> choice;

		switch (choice) {
		case 1:
			cout << "Enter the value: ";
			cin >> value;
			cq.Enqueue(value);
			break;
		case 2:
			cq.Dequeue();
			break;
		case 3:
			cq.peek();
			break;
		case 4:
			cq.display();
			break;
		case 5:
			cout << "Exiting the program!\n";
			break;
		default:
			cout << "Invalid operation!\n";
		}
	} while (choice != 5);

	return 0;
}
