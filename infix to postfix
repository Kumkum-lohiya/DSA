#include<iostream>
using namespace std;

int precedence(char op)
{
	if(op == '^') return 3;
	if(op == '*' || op == '/') return 2;
	if(op == '+' || op == '-') return 1;
	return 0;
}

int main()
{
	string str;
	char stack[100],p[100];
	int top = -1,j=-1;
	
	cout<<"Enter the Infix Expression :"<<endl;
	getline(cin,str);
	
	for(int i=0;i<str.length();i++)
	{
		char ch = str[i];
		
		if((ch >= 'A' && ch <='Z') || (ch >= 'a' && ch <= 'z')||(ch >='0' && ch <='9' ))
		{
			p[++j] = ch;
		}
		
		else if(ch == '(')
		{
			stack[++top] == ch;
		}
		
		else if(ch == ')')
		{
			while(top != -1 && stack[top] != '(')
			{
				p[++j] = stack[top--];
			}
		}
		
		else if(ch == '+' || ch == '*' ||ch == '-' ||ch == '/' ||ch == '^')
		{
			while(top != -1 && precedence(stack[top]) >= precedence(ch))
			{
				p[++j] = stack[top--];
			}
			stack[++top] = ch;
		}
	}
	
	while(top != -1)
	{
		p[++j] = stack[top--];
	}
	p[++j] ='\0';
	cout<<"Postfix Expression :"<<p<<endl;
	
	return 0;
}
